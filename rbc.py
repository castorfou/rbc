# AUTOGENERATED! DO NOT EDIT! File to edit: update_classement.ipynb.

# %% auto 0
__all__ = ['PAGE', 'html_tables', 'df_adherents', 'get_classement', 'get_classements', 'add_classements']

# %% update_classement.ipynb 4
PAGE = 'https://badmania.fr/club-joueurs-2254-riom-badminton-club.html'

# %% update_classement.ipynb 5
import pandas as pd
html_tables = pd.read_html(PAGE)
df_adherents = html_tables[0]

# %% update_classement.ipynb 9
def get_classement(
    license_number,# le numero de license
):
    classement_licencie = df_adherents[df_adherents['Licence'] == license_number]['Class.']
    return classement_licencie.values[0] if len(classement_licencie)>0 else ''

# %% update_classement.ipynb 14
def get_classements(
    license_number,# le numero de license
):
    classement_licencie = df_adherents[df_adherents['Licence'] == license_number]['Class.']
    classement =  classement_licencie.values[0] if len(classement_licencie)>0 else '-/-/-'
    return pd.Series(classement.split('/'))

# %% update_classement.ipynb 29
def add_classements(dataframe, #le dataframe des adherents
                   ):
    dataframe = dataframe.copy()
    dataframe['Classement']= dataframe['Licence'].apply(lambda x: get_classement(x))
    dataframe[['S', 'D', 'M']]= dataframe['Licence'].apply(lambda x: get_classements(x))
    return dataframe
